/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TermsRouteImport } from './routes/terms'
import { Route as PrivacyRouteImport } from './routes/privacy'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AboutRouteImport } from './routes/about'
import { Route as DashboardLayoutRouteImport } from './routes/_dashboard-layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardLayoutDashboardTransactionsRouteImport } from './routes/_dashboard-layout/dashboard.transactions'
import { Route as DashboardLayoutDashboardSettingsRouteImport } from './routes/_dashboard-layout/dashboard.settings'
import { Route as DashboardLayoutDashboardHomeRouteImport } from './routes/_dashboard-layout/dashboard.home'
import { Route as DashboardLayoutDashboardAccountsRouteImport } from './routes/_dashboard-layout/dashboard.accounts'

const TermsRoute = TermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyRoute = PrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardLayoutRoute = DashboardLayoutRouteImport.update({
  id: '/_dashboard-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardLayoutDashboardTransactionsRoute =
  DashboardLayoutDashboardTransactionsRouteImport.update({
    id: '/dashboard/transactions',
    path: '/dashboard/transactions',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)
const DashboardLayoutDashboardSettingsRoute =
  DashboardLayoutDashboardSettingsRouteImport.update({
    id: '/dashboard/settings',
    path: '/dashboard/settings',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)
const DashboardLayoutDashboardHomeRoute =
  DashboardLayoutDashboardHomeRouteImport.update({
    id: '/dashboard/home',
    path: '/dashboard/home',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)
const DashboardLayoutDashboardAccountsRoute =
  DashboardLayoutDashboardAccountsRouteImport.update({
    id: '/dashboard/accounts',
    path: '/dashboard/accounts',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/dashboard/accounts': typeof DashboardLayoutDashboardAccountsRoute
  '/dashboard/home': typeof DashboardLayoutDashboardHomeRoute
  '/dashboard/settings': typeof DashboardLayoutDashboardSettingsRoute
  '/dashboard/transactions': typeof DashboardLayoutDashboardTransactionsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/dashboard/accounts': typeof DashboardLayoutDashboardAccountsRoute
  '/dashboard/home': typeof DashboardLayoutDashboardHomeRoute
  '/dashboard/settings': typeof DashboardLayoutDashboardSettingsRoute
  '/dashboard/transactions': typeof DashboardLayoutDashboardTransactionsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_dashboard-layout': typeof DashboardLayoutRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/_dashboard-layout/dashboard/accounts': typeof DashboardLayoutDashboardAccountsRoute
  '/_dashboard-layout/dashboard/home': typeof DashboardLayoutDashboardHomeRoute
  '/_dashboard-layout/dashboard/settings': typeof DashboardLayoutDashboardSettingsRoute
  '/_dashboard-layout/dashboard/transactions': typeof DashboardLayoutDashboardTransactionsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/login'
    | '/privacy'
    | '/terms'
    | '/dashboard/accounts'
    | '/dashboard/home'
    | '/dashboard/settings'
    | '/dashboard/transactions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/privacy'
    | '/terms'
    | '/dashboard/accounts'
    | '/dashboard/home'
    | '/dashboard/settings'
    | '/dashboard/transactions'
  id:
    | '__root__'
    | '/'
    | '/_dashboard-layout'
    | '/about'
    | '/login'
    | '/privacy'
    | '/terms'
    | '/_dashboard-layout/dashboard/accounts'
    | '/_dashboard-layout/dashboard/home'
    | '/_dashboard-layout/dashboard/settings'
    | '/_dashboard-layout/dashboard/transactions'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  PrivacyRoute: typeof PrivacyRoute
  TermsRoute: typeof TermsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard-layout': {
      id: '/_dashboard-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard-layout/dashboard/transactions': {
      id: '/_dashboard-layout/dashboard/transactions'
      path: '/dashboard/transactions'
      fullPath: '/dashboard/transactions'
      preLoaderRoute: typeof DashboardLayoutDashboardTransactionsRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
    '/_dashboard-layout/dashboard/settings': {
      id: '/_dashboard-layout/dashboard/settings'
      path: '/dashboard/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardLayoutDashboardSettingsRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
    '/_dashboard-layout/dashboard/home': {
      id: '/_dashboard-layout/dashboard/home'
      path: '/dashboard/home'
      fullPath: '/dashboard/home'
      preLoaderRoute: typeof DashboardLayoutDashboardHomeRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
    '/_dashboard-layout/dashboard/accounts': {
      id: '/_dashboard-layout/dashboard/accounts'
      path: '/dashboard/accounts'
      fullPath: '/dashboard/accounts'
      preLoaderRoute: typeof DashboardLayoutDashboardAccountsRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
  }
}

interface DashboardLayoutRouteChildren {
  DashboardLayoutDashboardAccountsRoute: typeof DashboardLayoutDashboardAccountsRoute
  DashboardLayoutDashboardHomeRoute: typeof DashboardLayoutDashboardHomeRoute
  DashboardLayoutDashboardSettingsRoute: typeof DashboardLayoutDashboardSettingsRoute
  DashboardLayoutDashboardTransactionsRoute: typeof DashboardLayoutDashboardTransactionsRoute
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
  DashboardLayoutDashboardAccountsRoute: DashboardLayoutDashboardAccountsRoute,
  DashboardLayoutDashboardHomeRoute: DashboardLayoutDashboardHomeRoute,
  DashboardLayoutDashboardSettingsRoute: DashboardLayoutDashboardSettingsRoute,
  DashboardLayoutDashboardTransactionsRoute:
    DashboardLayoutDashboardTransactionsRoute,
}

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
  DashboardLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  PrivacyRoute: PrivacyRoute,
  TermsRoute: TermsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
