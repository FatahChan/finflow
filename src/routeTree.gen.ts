/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as ProtectedIndexRouteImport } from './routes/_protected.index'
import { Route as ProtectedTransactionsRouteImport } from './routes/_protected.transactions'
import { Route as ProtectedAccountsRouteImport } from './routes/_protected.accounts'

const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedIndexRoute = ProtectedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedTransactionsRoute = ProtectedTransactionsRouteImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedAccountsRoute = ProtectedAccountsRouteImport.update({
  id: '/accounts',
  path: '/accounts',
  getParentRoute: () => ProtectedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/accounts': typeof ProtectedAccountsRoute
  '/transactions': typeof ProtectedTransactionsRoute
  '/': typeof ProtectedIndexRoute
}
export interface FileRoutesByTo {
  '/accounts': typeof ProtectedAccountsRoute
  '/transactions': typeof ProtectedTransactionsRoute
  '/': typeof ProtectedIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_protected': typeof ProtectedRouteWithChildren
  '/_protected/accounts': typeof ProtectedAccountsRoute
  '/_protected/transactions': typeof ProtectedTransactionsRoute
  '/_protected/': typeof ProtectedIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/accounts' | '/transactions' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/accounts' | '/transactions' | '/'
  id:
    | '__root__'
    | '/_protected'
    | '/_protected/accounts'
    | '/_protected/transactions'
    | '/_protected/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/transactions': {
      id: '/_protected/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof ProtectedTransactionsRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/accounts': {
      id: '/_protected/accounts'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof ProtectedAccountsRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface ProtectedRouteChildren {
  ProtectedAccountsRoute: typeof ProtectedAccountsRoute
  ProtectedTransactionsRoute: typeof ProtectedTransactionsRoute
  ProtectedIndexRoute: typeof ProtectedIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedAccountsRoute: ProtectedAccountsRoute,
  ProtectedTransactionsRoute: ProtectedTransactionsRoute,
  ProtectedIndexRoute: ProtectedIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
